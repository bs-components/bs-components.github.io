/*! Built with http://stenciljs.com */
const{h:t}=window.bscomponents;import{p as e,o,s as a,r as s,q as n}from"./chunk-d2b1926f.js";import{a as l}from"./chunk-217bc533.js";import{a as i}from"./chunk-da49747d.js";import{a as r}from"./chunk-65570c01.js";import"./chunk-e18b632f.js";import"./chunk-ede00b3a.js";function d(t,e){if(t.classList)t.classList.toggle(e);else{const o=t.className.split(" "),a=o.indexOf(e);a>=0?o.splice(a,1):o.push(e),t.className=o.join(" ")}}class g{constructor(){this.tabindex="0"}componentWillLoad(){if(this.addFocusClass=!1,"-1"===this.tabindex&&(this.tabindex=""),"0"===this.tabindex){const t=this.bsButtonEl.querySelector("input");l(this.bsButtonEl,'[data-toggle="buttons"]')&&t&&(this.addFocusClass=!0,this.tabindex="")}}handleFocusIn(t){if(!a(this.bsButtonEl,"disabled")&&("-1"===this.tabindex&&(this.tabindex=""),this.addFocusClass)){const e=l(t.target,".btn");i(e,"focus")}}handleFocusOut(){a(this.bsButtonEl,"disabled")||this.addFocusClass&&s(this.bsButtonEl,"focus")}handleKeyDown(t){if(!a(this.bsButtonEl,"disabled")&&this.bsButtonEl.contains(t.target)){if(32===t.which){if(!this.bsButtonEl.isEqualNode(t.target)){if("button"===o(t.target.tagName)&&"collapse"!==t.target.dataset.toggle&&"modal"!==t.target.dataset.toggle)return;if("a"===o(t.target.tagName)&&"modal"!==t.target.dataset.toggle)return}return t.stopPropagation&&(t.stopPropagation(),t.preventDefault()),console.log("space event: ",t),"collapse"===t.target.dataset.toggle?void g.handleCollapseToggle(t.target):"modal"===t.target.dataset.toggle?void g.handleModalToggle(t.target):void this.handleToggle(this.bsButtonEl)}if(13===t.which){if(!this.bsButtonEl.isEqualNode(t.target)){if("button"===o(t.target.tagName)&&"collapse"!==t.target.dataset.toggle&&"modal"!==t.target.dataset.toggle)return;if("a"===o(t.target.tagName)&&"collapse"!==t.target.dataset.toggle&&"modal"!==t.target.dataset.toggle)return}return t.stopPropagation&&(t.stopPropagation(),t.preventDefault()),"collapse"===t.target.dataset.toggle?void g.handleCollapseToggle(t.target):"modal"===t.target.dataset.toggle?void g.handleModalToggle(t.target):void this.handleToggle(this.bsButtonEl)}27===t.which&&(t.stopPropagation&&(t.stopPropagation(),t.preventDefault()),document.activeElement.blur(),this.addFocusClass&&s(this.bsButtonEl,"focus"))}}handleButtonClick(t){if(a(this.bsButtonEl,"disabled"))return;"a"===o(t.target.tagName)&&t.stopPropagation&&(t.stopPropagation(),t.preventDefault());const e=l(t.target,'[data-toggle="collapse"]');e&&this.bsButtonEl.contains(e)&&g.handleCollapseToggle(e);const s=l(t.target,'[data-toggle="modal"]');s&&this.bsButtonEl.contains(s)&&g.handleModalToggle(s),this.handleToggle(t.target)}static handleCollapseToggle(t){const e=r(t);if(e){const o=[],a=Array.prototype.slice.call(document.querySelectorAll(e));for(let e=0,s=a.length;e<s;e+=1)a[e].collapse?(a[e].collapse("toggle",t),a[e].dataset.parent&&o.push(a[e].dataset.parent)):console.error('Unable to toggle collapse for all targets due to unavailable bs-collapse method "collapse');const s=function(t){const e=[],o=[];for(let a=0,s=t.length;a<s;a+=1)-1===e.indexOf(t[a])?e.push(t[a]):-1===o.indexOf(t[a])&&o.push(t[a]);return o}(o);for(let t=0,e=s.length;t<e;t+=1)console.warn(`You are trying to toggle multiple collapses that have the same parent accordion (${s[t]}).\n                      Normally only one item in an accordion is toggled at one time.`)}}static handleModalToggle(t){const e=r(t);if(e)try{const o=document.querySelector(e);o.modal&&o.modal("toggle",t)}catch(t){console.log("bs-button modal toggle target must be a valid css selector string"),console.error(t.message)}}handleToggle(t){if(a(this.bsButtonEl,"disabled"))return;if(!t||!this.bsButtonEl.contains(t))throw new Error("Invalid element unable to toggle");let e=!0,o=!0;const i=l(t,'[data-toggle="buttons"]');if(i){const t=this.bsButtonEl.querySelector("input");if(t){if("radio"===t.type)if(t.checked&&a(t,"active"))e=!1;else{const t=i.querySelector(".active");t&&s(t,"active")}e&&(t.checked=!a(this.bsButtonEl,"active"),n(t,"change")),this.addFocusClass&&t.focus(),o=!1}return o&&this.bsButtonEl.setAttribute("aria-pressed",a(this.bsButtonEl,"active")?"false":"true"),void(e&&d(this.bsButtonEl,"active"))}const r=l(t,'[data-toggle="button"]');this.bsButtonEl.contains(r)&&r&&(r.setAttribute("aria-pressed",a(r,"active")?"false":"true"),d(r,"active"))}dropdown(t={}){if("dropdown"!==this.bsButtonEl.dataset.toggle)throw new Error('dropdown method can only be run on a bs-button with [data-toggle="dropdown"]');const e=l(this.bsButtonEl,"bs-dropdown");if(!e)throw new Error("unable to find parent bs-dropdown component");return"get-show"===t?e.show:"get-config"===t?e.config:"get-defaults"===t?e.defaults:e.dropdown(t,this.bsButtonEl)}button(t={}){if(0===e(t))return this.bsButtonEl;if("toggle"===t)return this.handleToggle(this.bsButtonEl),!0;if("string"==typeof t)throw new Error(`No method named "${t}"`);return null}render(){return t("slot",null)}static get is(){return"bs-button"}static get properties(){return{addFocusClass:{state:!0},bsButtonEl:{elementRef:!0},button:{method:!0},dropdown:{method:!0},tabindex:{type:String,attr:"tabindex",reflectToAttr:!0,mutable:!0}}}static get listeners(){return[{name:"focusin",method:"handleFocusIn"},{name:"focusout",method:"handleFocusOut"},{name:"keydown",method:"handleKeyDown"},{name:"click",method:"handleButtonClick"}]}}export{g as BsButton};